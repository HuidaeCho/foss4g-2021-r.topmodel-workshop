#!/usr/bin/env python3
# GRASS GIS module for creating r.topmodel observed file
#
# AUTHOR:       Huidae Cho
# COPYRIGHT:    (C) 2015 by Huidae Cho
# LICENSE:      GNU Affero General Public License v3

#%module
#% description: Creates an r.topmodel observed streamflow file from USGS data.
#% keywords: hydrology
#% keywords: watershed
#% overwrite: yes
#%end
#%option
#% key: siteno
#% type: string
#% description: USGS site number
#% required: yes
#%end
#%option
#% key: startdate
#% type: string
#% required: yes
#% description: Start date in YYYY-MM-DD format
#%end
#%option
#% key: enddate
#% type: string
#% required: yes
#% description: End date in YYYY-MM-DD format
#%end
#%option G_OPT_F_OUTPUT
#% label: Name for output file
#% required: yes
#%end

import sys
import os
import grass.script as grass
from usgs import fetch_daily_discharge

def main():
    global overwrite

    siteno = options["siteno"]
    startdate = options["startdate"]
    enddate = options["enddate"]
    output = options["output"]
    overwrite = grass.overwrite()

    create_observed_file(siteno, startdate, enddate, output)

def create_observed_file(siteno, startdate, enddate, output):
    global overwrite

    grass.message(_("===== Creating Observed File ====="))

    data = fetch_daily_discharge(siteno, startdate, enddate)

    f = open(output, "w")
    f.write("# Generated by %s siteno=%s startdate=%s enddate=%s output=%s\n" %
            (os.path.basename(sys.argv[0]), siteno, startdate, enddate, output))
    for rec in data:
        # ft^3/s => m^3/d
        f.write("%f\n" % (rec["discharge"] * 2446.5755))
    f.close()

if __name__ == "__main__":
    options, flags = grass.parser()
    sys.exit(main())
